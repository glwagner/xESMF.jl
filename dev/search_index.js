var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"This page documents the public API of xESMF.jl.","category":"page"},{"location":"api/#Main-Functions","page":"API Reference","title":"Main Functions","text":"","category":"section"},{"location":"api/#xESMF.sparse_regridder_weights","page":"API Reference","title":"xESMF.sparse_regridder_weights","text":"sparse_regridder_weights(FT, regridder)\n\nReturn the regridder weights as a sparse matrix.\n\n\n\n\n\n","category":"function"},{"location":"api/#Module-Contents","page":"API Reference","title":"Module Contents","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"The xESMF module provides the following functionality:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"sparse_regridder_weights: Main function for computing sparse regridding weights\nxesmf: Python xESMF module interface (internal)","category":"page"},{"location":"api/#Internal-Functions","page":"API Reference","title":"Internal Functions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"The following functions are used internally and are not part of the public API:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"xESMF.xesmf: The Python xESMF module interface","category":"page"},{"location":"development/#Development","page":"Development","title":"Development","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"This page provides information for developers and contributors to xESMF.jl.","category":"page"},{"location":"development/#Development-Setup","page":"Development","title":"Development Setup","text":"","category":"section"},{"location":"development/#Prerequisites","page":"Development","title":"Prerequisites","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"Julia 1.10 or later\nGit","category":"page"},{"location":"development/#Setting-Up-the-Development-Environment","page":"Development","title":"Setting Up the Development Environment","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"Clone the repository:\ngit clone https://github.com/gregorywagner/xESMF.jl.git\ncd xESMF.jl\nStart Julia and activate the project:\njulia --project=.\nInstall dependencies:\nusing Pkg\nPkg.instantiate()\nRun tests:\nPkg.test()","category":"page"},{"location":"development/#Building-Documentation","page":"Development","title":"Building Documentation","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"To build the documentation locally:","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"Navigate to the docs directory:\ncd docs\nInstall documentation dependencies:\njulia --project=. -e \"using Pkg; Pkg.develop(PackageSpec(path=\\\"..\\\")); Pkg.instantiate()\"\nBuild the documentation:\njulia --project=. docs/make.jl","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"The built documentation will be available in docs/build/.","category":"page"},{"location":"development/#Running-Tests","page":"Development","title":"Running Tests","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"The package includes a comprehensive test suite:","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"julia --project=. -e \"using Pkg; Pkg.test()\"","category":"page"},{"location":"development/#Test-Categories","page":"Development","title":"Test Categories","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"Unit Tests: Basic module functionality and imports\nRegridder Tests: Core regridding functionality\nIntegration Tests: Module integration with dependencies","category":"page"},{"location":"development/#Adding-New-Tests","page":"Development","title":"Adding New Tests","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"When adding new functionality, please add corresponding tests:","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"Add unit tests to test/test_unit.jl\nAdd functionality-specific tests to test/test_regridder.jl\nAdd integration tests to test/test_integration.jl","category":"page"},{"location":"development/#Code-Style","page":"Development","title":"Code Style","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"Please follow Julia style guidelines:","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"Use 4 spaces for indentation\nUse descriptive variable names\nAdd docstrings for all public functions\nInclude type annotations where helpful","category":"page"},{"location":"development/#Contributing","page":"Development","title":"Contributing","text":"","category":"section"},{"location":"development/#Pull-Request-Process","page":"Development","title":"Pull Request Process","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"Fork the repository\nCreate a feature branch: git checkout -b feature-name\nMake your changes\nAdd tests for new functionality\nEnsure all tests pass: julia --project=. -e \"using Pkg; Pkg.test()\"\nUpdate documentation if needed\nSubmit a pull request","category":"page"},{"location":"development/#Documentation-Updates","page":"Development","title":"Documentation Updates","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"When adding new functionality:","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"Update the relevant documentation pages\nAdd docstrings to new functions\nInclude examples in the documentation\nUpdate the API reference","category":"page"},{"location":"development/#Dependencies","page":"Development","title":"Dependencies","text":"","category":"section"},{"location":"development/#Core-Dependencies","page":"Development","title":"Core Dependencies","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"CondaPkg.jl: Manages Python dependencies\nPythonCall.jl: Python-Julia interoperability\nSparseArrays.jl: Sparse matrix operations","category":"page"},{"location":"development/#Development-Dependencies","page":"Development","title":"Development Dependencies","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"Test.jl: Testing framework\nDocumenter.jl: Documentation generation","category":"page"},{"location":"development/#Python-Dependencies","page":"Development","title":"Python Dependencies","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"xesmf: Python regridding library (installed via CondaPkg)","category":"page"},{"location":"development/#Continuous-Integration","page":"Development","title":"Continuous Integration","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"The package uses GitHub Actions for:","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"Testing: Runs on Julia 1.10 and 1.11 across multiple operating systems\nDocumentation: Automatically builds and deploys documentation","category":"page"},{"location":"development/#Release-Process","page":"Development","title":"Release Process","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"Update version number in Project.toml\nUpdate CHANGELOG.md with new features and bug fixes\nCreate a git tag: git tag v0.1.0\nPush the tag: git push origin v0.1.0\nGitHub Actions will automatically create a release","category":"page"},{"location":"development/#Issues-and-Bug-Reports","page":"Development","title":"Issues and Bug Reports","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"Please report issues and bugs on the GitHub issue tracker. When reporting bugs, please include:","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"Julia version\nOperating system\nMinimal reproducible example\nExpected vs. actual behavior","category":"page"},{"location":"development/#License","page":"Development","title":"License","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"This project is licensed under the same terms as the Julia language itself.","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"This page provides examples of how to use xESMF.jl in various scenarios.","category":"page"},{"location":"examples/#Basic-Usage","page":"Examples","title":"Basic Usage","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"The main function in xESMF.jl is sparse_regridder_weights, which computes sparse regridding weights from a regridder object.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using xESMF\n\n# Example with a regridder object (mock example)\n# regridder = create_regridder(source_grid, target_grid)\n\n# Get sparse weights with default type (Float64)\n# weights = sparse_regridder_weights(regridder)\n\n# Get sparse weights with specific type\n# weights_float32 = sparse_regridder_weights(Float32, regridder)","category":"page"},{"location":"examples/#Working-with-Oceananigans.jl","page":"Examples","title":"Working with Oceananigans.jl","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"xESMF.jl is designed to work seamlessly with Oceananigans.jl for ocean modeling applications.","category":"page"},{"location":"examples/#Creating-Grids-and-Fields","page":"Examples","title":"Creating Grids and Fields","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"using Oceananigans\nusing xESMF\n\n# Create different grid types\ntripolar_grid = TripolarGrid(size=(360, 170, 1), z=(0, 1))\nlatlon_grid = LatitudeLongitudeGrid(\n    size=(360, 180, 1), \n    longitude=(0, 360), \n    latitude=(-90, 90), \n    z=(0, 1)\n)\n\n# Create center fields on the grids\ntripolar_field = CenterField(tripolar_grid)\nlatlon_field = CenterField(latlon_grid)","category":"page"},{"location":"examples/#Computing-Regridding-Weights","page":"Examples","title":"Computing Regridding Weights","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"# Compute regridding weights from lat-lon to tripolar grid\n# weights = sparse_regridding_weights(latlon_field, tripolar_field)\n\n# The weights matrix can then be used for efficient regridding\n# regridded_data = weights * source_data","category":"page"},{"location":"examples/#Type-Flexibility","page":"Examples","title":"Type Flexibility","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"xESMF.jl supports different numeric types for the regridding weights:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"# Float64 (default)\n# weights_f64 = sparse_regridder_weights(regridder)\n\n# Float32\n# weights_f32 = sparse_regridder_weights(Float32, regridder)\n\n# Int64\n# weights_i64 = sparse_regridder_weights(Int64, regridder)","category":"page"},{"location":"examples/#Error-Handling","page":"Examples","title":"Error Handling","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"The package includes proper error handling for invalid inputs:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"# These will throw appropriate errors:\n# sparse_regridder_weights()  # MethodError: no arguments\n# sparse_regridder_weights(Float64)  # MethodError: missing regridder","category":"page"},{"location":"examples/#Performance-Considerations","page":"Examples","title":"Performance Considerations","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Sparse matrices are used for memory efficiency\nThe Python xESMF library handles the heavy computational work\nType conversion is optimized for Julia's type system","category":"page"},{"location":"#xESMF.jl","page":"Home","title":"xESMF.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: CI) (Image: Documentation)","category":"page"},{"location":"","page":"Home","title":"Home","text":"A Julia package for sparse regridding weights using the xESMF Python library.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"xESMF.jl provides a Julia interface to the xESMF (xarray Earth System Model Exchange Format) Python library, enabling efficient computation of sparse regridding weights for Earth system models. This package is particularly useful for working with Oceananigans.jl and other geophysical modeling packages.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Sparse Regridding Weights: Compute sparse matrices for efficient regridding between different grid types\nPython Integration: Seamless integration with the xESMF Python library via PythonCall.jl\nOceananigans Compatible: Designed to work with Oceananigans.jl grids and fields\nType Flexibility: Support for different numeric types (Float64, Float32, etc.)","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"xESMF\")","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Oceananigans\nusing xESMF\n\n# Create grids\ntg = TripolarGrid(size=(360, 170, 1), z=(0, 1))\nll = LatitudeLongitudeGrid(size=(360, 180, 1), longitude=(0, 360), latitude=(-90, 90), z=(0, 1))\n\n# Create center fields\nctg = CenterField(tg)\ncll = CenterField(ll)\n\n# Compute regridding weights\n# weights = sparse_regridding_weights(cll, ctg)","category":"page"},{"location":"#Dependencies","page":"Home","title":"Dependencies","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"xESMF.jl depends on:","category":"page"},{"location":"","page":"Home","title":"Home","text":"CondaPkg.jl: For managing Python dependencies\nPythonCall.jl: For Python-Julia interoperability\nSparseArrays.jl: For sparse matrix operations","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package automatically installs the xESMF Python library via CondaPkg.","category":"page"},{"location":"#Integration-with-Oceananigans.jl","page":"Home","title":"Integration with Oceananigans.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"xESMF.jl is designed to work seamlessly with Oceananigans.jl for ocean modeling applications:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Oceananigans\nusing xESMF\n\n# Create grids\ntg = TripolarGrid(size=(360, 170, 1), z=(0, 1))\nll = LatitudeLongitudeGrid(size=(360, 180, 1), longitude=(0, 360), latitude=(-90, 90), z=(0, 1))\n\n# Create center fields\nctg = CenterField(tg)\ncll = CenterField(ll)\n\n# Compute regridding weights\n# weights = sparse_regridding_weights(cll, ctg)","category":"page"},{"location":"#Documentation-Structure","page":"Home","title":"Documentation Structure","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"API Reference: Complete function documentation\nExamples: Usage examples and tutorials\nDevelopment: Contributing and development guidelines","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is licensed under the same terms as the Julia language itself.","category":"page"},{"location":"#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Contributions are welcome! Please see the Development section for guidelines.","category":"page"}]
}
